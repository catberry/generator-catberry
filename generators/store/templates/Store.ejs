'use strict';

/*
 * @see http://catberry.org/documentation#stores-interface
 */
class <%= clazz %> {

  /**
   * @param {ServiceLocator} locator Dependency resolver
   */
  constructor(locator) {

  // In case you have the UHR plugin registered
  // this._uhr = locator.resolve('uhr');

  /**
   * Current lifetime for data (in milliseconds) which the store is responsible for.
   * @type {number} Lifetime in milliseconds.
   */
  this.$lifetime = 60000;
}

  load() {
  // Here you can do any HTTP requests using this._uhr
  // or another universal HTTP request implementation.
  // Please read details here https://github.com/catberry/catberry-uhr.
}

  handleSomeAction() {
  // Here you can call this.$context.changed() if you know
  // that remote data has been changed.
  // Also, you can have other actions and handle methods like this, just define a method.
}
}

module.exports = <%= clazz %>;
